@using ChessBoardGui.Models;

<div class="draggable-piece piece" draggable="true" @ondragstart="@(() => HandleDragStart(Model))" @onclick="HandleClick">
    @if(Model != null)
    {
        <div>
            
        <!--
                <i class="@fontawesomeClass(Model.PieceClass) @colourClass(Model.Colour)"></i>
        -->
         
                <img src="@wikimediaClass(Model.PieceClass, Model.Colour)" width="70" height="70"/>
        </div>
    }
</div>
@code {
    [Parameter] public PieceModel Model { get; set; }
    [CascadingParameter] PiecesContainer Container { get; set; }
    [Parameter] public EventCallback RefreshPreviousPosition { get; set; }
    private void HandleDragStart(PieceModel selectedJob)
    {        
        Container.Payload = this.Model.Id;
    }    

    private async Task HandleClick()
    {
        await Container.VisualizeLegalMoves(Model);

    }

    private string wikimediaClass(PieceClass piece, Colour colour)
    {
        switch (colour)
        {
            case Colour.White:
                switch (piece)
                {
                    case PieceClass.King:
                        return "https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg";
                    case PieceClass.Queen:
                        return "https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg";
                    case PieceClass.Rook:
                        return "https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg";
                    case PieceClass.Bishop:
                        return "https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg";
                    case PieceClass.Knight:
                        return "https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg";
                    case PieceClass.Pawn:
                        return "https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg";
                    default: return "";
                }
            case Colour.Black:
                switch (piece)
                {
                    case PieceClass.King:
                        return "https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg";
                    case PieceClass.Queen:
                        return "https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg";
                    case PieceClass.Rook:
                        return "https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg";
                    case PieceClass.Bishop:
                        return "https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg";
                    case PieceClass.Knight:
                        return "https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg";
                    case PieceClass.Pawn:
                        return "https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg";
                    default: return "";
                }
            default: return "";
        }
        
    }

    private string fontawesomeClass(PieceClass piece)
    {
        switch (piece)
        {
            case PieceClass.King:
                return "fa-solid fa-chess-king";
            case PieceClass.Queen:
                return "fa-solid fa-chess-queen";
            case PieceClass.Bishop: 
                return "fa-solid fa-chess-bishop";
            case PieceClass.Knight:
                return "fa-solid fa-chess-knight";
            case PieceClass.Rook:
                return "fa-solid fa-chess-rook";
            case PieceClass.Pawn:
                return "fa-solid fa-chess-pawn";
            default:
                return "fa-regular fa-cow";
        }
    }
}
